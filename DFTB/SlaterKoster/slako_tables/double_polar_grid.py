from numpy import load, array
import os.path
# This file was automatically generated by DFTB/SlaterKoster/generate_ptcgrid.py
# It loads the double polar grid from a binary file grid.npz that can be used
# for integrating overlaps and hamiltonian matrix elements.
# separation between centers
d = \
array([  0.        ,   0.04016064,   0.08032129,   0.12048193,
         0.16064257,   0.20080321,   0.24096386,   0.2811245 ,
         0.32128514,   0.36144578,   0.40160643,   0.44176707,
         0.48192771,   0.52208835,   0.562249  ,   0.60240964,
         0.64257028,   0.68273092,   0.72289157,   0.76305221,
         0.80321285,   0.84337349,   0.88353414,   0.92369478,
         0.96385542,   1.00401606,   1.04417671,   1.08433735,
         1.12449799,   1.16465863,   1.20481928,   1.24497992,
         1.28514056,   1.3253012 ,   1.36546185,   1.40562249,
         1.44578313,   1.48594378,   1.52610442,   1.56626506,
         1.6064257 ,   1.64658635,   1.68674699,   1.72690763,
         1.76706827,   1.80722892,   1.84738956,   1.8875502 ,
         1.92771084,   1.96787149,   2.00803213,   2.04819277,
         2.08835341,   2.12851406,   2.1686747 ,   2.20883534,
         2.24899598,   2.28915663,   2.32931727,   2.36947791,
         2.40963855,   2.4497992 ,   2.48995984,   2.53012048,
         2.57028112,   2.61044177,   2.65060241,   2.69076305,
         2.73092369,   2.77108434,   2.81124498,   2.85140562,
         2.89156627,   2.93172691,   2.97188755,   3.01204819,
         3.05220884,   3.09236948,   3.13253012,   3.17269076,
         3.21285141,   3.25301205,   3.29317269,   3.33333333,
         3.37349398,   3.41365462,   3.45381526,   3.4939759 ,
         3.53413655,   3.57429719,   3.61445783,   3.65461847,
         3.69477912,   3.73493976,   3.7751004 ,   3.81526104,
         3.85542169,   3.89558233,   3.93574297,   3.97590361,
         4.01606426,   4.0562249 ,   4.09638554,   4.13654618,
         4.17670683,   4.21686747,   4.25702811,   4.29718876,
         4.3373494 ,   4.37751004,   4.41767068,   4.45783133,
         4.49799197,   4.53815261,   4.57831325,   4.6184739 ,
         4.65863454,   4.69879518,   4.73895582,   4.77911647,
         4.81927711,   4.85943775,   4.89959839,   4.93975904,
         4.97991968,   5.02008032,   5.06024096,   5.10040161,
         5.14056225,   5.18072289,   5.22088353,   5.26104418,
         5.30120482,   5.34136546,   5.3815261 ,   5.42168675,
         5.46184739,   5.50200803,   5.54216867,   5.58232932,
         5.62248996,   5.6626506 ,   5.70281124,   5.74297189,
         5.78313253,   5.82329317,   5.86345382,   5.90361446,
         5.9437751 ,   5.98393574,   6.02409639,   6.06425703,
         6.10441767,   6.14457831,   6.18473896,   6.2248996 ,
         6.26506024,   6.30522088,   6.34538153,   6.38554217,
         6.42570281,   6.46586345,   6.5060241 ,   6.54618474,
         6.58634538,   6.62650602,   6.66666667,   6.70682731,
         6.74698795,   6.78714859,   6.82730924,   6.86746988,
         6.90763052,   6.94779116,   6.98795181,   7.02811245,
         7.06827309,   7.10843373,   7.14859438,   7.18875502,
         7.22891566,   7.26907631,   7.30923695,   7.34939759,
         7.38955823,   7.42971888,   7.46987952,   7.51004016,
         7.5502008 ,   7.59036145,   7.63052209,   7.67068273,
         7.71084337,   7.75100402,   7.79116466,   7.8313253 ,
         7.87148594,   7.91164659,   7.95180723,   7.99196787,
         8.03212851,   8.07228916,   8.1124498 ,   8.15261044,
         8.19277108,   8.23293173,   8.27309237,   8.31325301,
         8.35341365,   8.3935743 ,   8.43373494,   8.47389558,
         8.51405622,   8.55421687,   8.59437751,   8.63453815,
         8.6746988 ,   8.71485944,   8.75502008,   8.79518072,
         8.83534137,   8.87550201,   8.91566265,   8.95582329,
         8.99598394,   9.03614458,   9.07630522,   9.11646586,
         9.15662651,   9.19678715,   9.23694779,   9.27710843,
         9.31726908,   9.35742972,   9.39759036,   9.437751  ,
         9.47791165,   9.51807229,   9.55823293,   9.59839357,
         9.63855422,   9.67871486,   9.7188755 ,   9.75903614,
         9.79919679,   9.83935743,   9.87951807,   9.91967871,
         9.95983936,  10.        ])
# load grid from grid.npz
_npz_file = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'grid.npz')
_npz = load(open(_npz_file, 'rb'))
_gr = [_npz["arr_%i" % i] for i in range(0, len(_npz.keys()))]
# grid
# (X,Y,areas) = grid[0][k], grid[1][k], grid[2][k]   gives the x and y-positions
# of the centers and areas of the quads for a grid with distance d[k] between the centers.
grid = _gr[:len(d)], _gr[len(d):2*len(d)], _gr[2*len(d):3*len(d)]
